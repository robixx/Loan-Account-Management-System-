@using LAMS.Application.ModelViewDto
@model LAMS.Application.ModelViewDto.MetaDataViewModel<EmployeeDataDto>

@{
    ViewData["Title"] = "MetaData Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
    int i = 1 + (Model.PageNumber - 1) * Model.PageSize;
}
@section Scripts {

}
<style>
    .card .card-header {
        border-bottom: 1px solid #ddd; /* thin gray line */
        padding: 10px 15px; /* spacing inside */
        font-weight: 600; /* bold header text */
        font-size: 16px; /* readable text size */
        color: #333; /* dark text */
    }

        .card .card-header .card-title {
            font-size: 18px;
            font-weight: 700;
            color: #212b36;
            margin: 0 0 10px;
        }


    .modal.right .modal-dialog {
        position: fixed;
        margin: 0;
        left: auto; /* Ensure it's not tied to the left edge */
        right: 0; /* Position the modal at the right edge */
        height: 100%;
        width: 75%; /* Responsive width for smaller screens */
        max-width: 400px;
        /* Initially position the modal off-screen to the right */
        transform: translate3d(100%, 0, 0);
    }

    .modal.right .modal-content {
        height: 100%;
        overflow-y: auto;
        border-radius: 0;
    }

    /* Animate the modal into view when it becomes active */
    .modal.right.show .modal-dialog {
        transform: translate3d(0, 0, 0);
    }

    /* Ensure the default Bootstrap modal transition still works */
    .modal-dialog {
        transition: transform .3s ease-out;
    }

    .btn-close {
        --bs-close-color: black !important;
    }

</style>


<div class="container-fluid">

    <div class="page-header">
        <div class="row">
            <div class="col">
                <h3 class="page-title">Meta Data Entry</h3>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Dashboard/Dashboard/Index">Dashboard</a></li>
                    <li class="breadcrumb-item active">Meta Data</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header pb-1 d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">MetaData Datatable</h4>
                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#rightSideModal">Add New</button>
                    @*  <p class="card-text">
                        This is the most basic example of the datatables with zero configuration. Use the
                        <code>.datatable</code> class to initialize datatables.
                    </p> *@
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-end mb-2">                     

                        <input type="text" id="searchTerm" class="form-control form-control-sm flat-end"
                               placeholder="Search..." style="width: 200px;">
                    </div>
                    <div class="table-responsive" id="tableContainer">
                        <table class="table" id="employeeTable">
                            <thead>
                                <tr>
                                    <th>Serial</th>
                                    <th>Name</th>
                                    <th>Designation</th>
                                    <th>Department</th>
                                    <th>Salary</th>
                                    <th>Action</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Data.Any())
                                {
                                    foreach (var item in Model.Data)
                                    {
                                       
                                        <tr>
                                            <td>@i</td>
                                            <td>@item.EmployeeName</td>
                                            <td>@item.</td>
                                            <td>@item.Department</td>
                                            <td>@item.Salary</td>
                                           @*  <td>
                                                 @{
                                                    var statusd = item.Status == 1 ? "Active" : "Inactive";
                                                    var badgeClass = item.Status == 1 ? "bg-success" : "bg-danger";
                                                } 
                                                <span class="badge success">@statusd</span>
                                            </td> *@
                                            <td>
                                                <a asp-action="Edit" asp-route-id="@item.EmployeeID" class="btn btn-sm btn-primary me-1">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.EmployeeID" class="btn btn-sm btn-danger"
                                                   onclick="return confirm('Are you sure you want to delete this record?');">
                                                    <i class="bi bi-trash"></i> Delete
                                                </a>
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                        @{
                            int maxPageDisplay = 5; // Number of page links to show
                            int startPage = Math.Max(Model.PageNumber - 2, 1);
                            int endPage = Math.Min(startPage + maxPageDisplay - 1, Model.TotalPages);
                            if (endPage - startPage < maxPageDisplay - 1)
                            {
                                startPage = Math.Max(endPage - maxPageDisplay + 1, 1);
                            }
                        }
                        <nav class="mt-2">
                            <ul class="pagination">
                                <!-- Previous button -->
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("MetaDataType", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize })">Previous</a>
                                </li>

                                @if (startPage > 1)
                                {
                                    <li class="page-item"><a class="page-link" href="@Url.Action("MetaDataType", new { pageNumber = 1, pageSize = Model.PageSize })">1</a></li>
                                    @if (startPage > 2)
                                    {
                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                    }
                                }

                                @for (int j = startPage; j <= endPage; j++)
                                {
                                    <li class="page-item @(j == Model.PageNumber ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("MetaDataType", new { pageNumber = j, pageSize = Model.PageSize })">@j</a>
                                    </li>
                                }

                                @if (endPage < Model.TotalPages)
                                {
                                    if (endPage < Model.TotalPages - 1)
                                    {
                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                    }
                                    <li class="page-item"><a class="page-link" href="@Url.Action("MetaDataType", new { pageNumber = Model.TotalPages, pageSize = Model.PageSize })">@Model.TotalPages</a></li>
                                }

                                <!-- Next button -->
                                <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("MetaDataType", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize })">Next</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- The Right-Side Modal -->
<div class="modal right fade" id="rightSideModal" tabindex="-1" aria-labelledby="rightSideModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="font-size:18px;" id="rightSideModalLabel">Meta Data Entry</h5>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"
                        style="--bs-close-color: black;"></button>
            </div>
            <div class="modal-body" style="background:#f3f3ef;">
                <div class="card">

                    <div class="card-body">
                        <div class="mb-3">
                            <label for="PropertyName" class="form-label">Property Name</label>
                            <input type="text"
                                   class="form-control form-control-sm"
                                   name="PropertyName"
                                   id="PropertyName"
                                   required />
                        </div>

                        <div class="mb-3 form-check">
                            <input type="checkbox"
                                   class="form-check-input"
                                   name="IsActive"
                                   id="IsActive" />
                            <label class="form-check-label" for="IsActive">Is Active</label>
                        </div>

                        <div class="mb-3 text-end">
                            <button type="submit" class="btn btn-info btn-sm">Save changes</button>
                        </div>
                    </div>

                </div>
                <div class="modal-footer d-none">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary btn-sm"></button>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/assets/js/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        let typingTimer;
        const typingInterval = 500; // wait 500ms after user stops typing

        function loadTable(pageNumber = 1) {
            const searchTerm = $('#searchTerm').val();
            const pageSize = 10;

            $.ajax({
                url: '@Url.Action("dynamicMetaDataType")',
                data: { pageNumber: pageNumber, pageSize: pageSize, searchTerm: searchTerm },
                type: 'GET',
                success: function(res) {
                    const tbody = $('#employeeTable tbody');
                    tbody.empty();
                    debugger;
                    let i = (res.pageNumber - 1) * res.pageSize + 1;
                    $.each(res.data, function(index, item) {
                        tbody.append(
                            `<tr>
                                <td>${i}</td>
                                <td>${item.employeeName}</td>
                                <td>${item.designation}</td>
                                <td>${item.department}</td>
                                <td>${item.salary}</td>
                                <td>
                                    <a href="/Controller/Edit/${item.employeeID}" class="btn btn-sm btn-primary">Edit</a>
                                    <a href="/Controller/Delete/${item.employeeID}" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?');">Delete</a>
                                </td>
                            </tr>`
                        );
                        i++;
                    });

                    // update pagination
                    const totalPages = res.totalPages;
                    const pagination = $('#pagination');
                    pagination.empty();
                    for (let j = 1; j <= totalPages; j++) {
                        pagination.append(
                            `<li class="page-item ${j === res.pageNumber ? "active" : ""}">
                                <a class="page-link page-link-dynamic" href="#" data-page="${j}">${j}</a>
                            </li>`
                        );
                    }
                }
            });
        }

        // Auto-search: trigger after user stops typing
        $('#searchTerm').on('keyup', function() {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(() => loadTable(1), typingInterval);
        });

        $('#searchTerm').on('keydown', function() {
            clearTimeout(typingTimer);
        });

        // Pagination click
        $(document).on('click', '.page-link-dynamic', function(e) {
            e.preventDefault();
            const page = $(this).data('page');
            loadTable(page);
        });
    });
</script>